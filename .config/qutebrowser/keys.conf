# vim: ft=conf
#
# In this config file, qutebrowser's key bindings are configured.
# The format looks like this:
#
# [keymode]
#
# command
#   keychain
#   keychain2
#   ...
#
# All blank lines and lines starting with '#' are ignored.
# Inline-comments are not permitted.
#
# keymode is a comma separated list of modes in which the key binding should be
# active. If keymode starts with !, the key binding is active in all modes
# except the listed modes.
#
# For special keys (can't be part of a keychain), enclose them in `<`...`>`.
# For modifiers, you can use either `-` or `+` as delimiters, and these names:
#
#  * Control: `Control`, `Ctrl`
#  * Meta:    `Meta`, `Windows`, `Mod4`
#  * Alt:     `Alt`, `Mod1`
#  * Shift:   `Shift`
#
# For simple keys (no `<>`-signs), a capital letter means the key is pressed
# with Shift. For special keys (with `<>`-signs), you need to explicitly add
# `Shift-` to match a key pressed with shift.
#
# Note that default keybindings are always bound, and need to be explicitly
# unbound if you wish to remove them:
#
# <unbound>
#   keychain
#   keychain2
#   ...

[!normal]

leave-mode
    <escape>
    <ctrl-[>

[normal]
# Keybindings for normal mode.

open {url}?action=raw
    Wr

open {url}?action=edit
    WE

open {url}?uselang=en
    We

hint links
    ol

hint all hover
    of
    s

set-cmd-text -s :open
    oo
    O

set-cmd-text :open {url:pretty}
    oO

set-cmd-text -s :open -t
    to
    T
    tt

set-cmd-text -s :open -b
    xo

set-cmd-text :open -b -i {url:pretty}
    xO

set-cmd-text -s :open -w
    wo

set-cmd-text :open -w {url:pretty}
    wO

set-cmd-text /
    /

set-cmd-text ?
    ?

set-cmd-text :
    :
    ;

open -t
    <ctrl-t>

open -w
    <ctrl-n>

tab-close
    d
    <ctrl-w>
    od

tab-close -o
    D
    oD

tab-move
    gm

tab-move -
    {
    gh
    gk

tab-move +
    shift-]
    }
    gj
    gl

tab-next
    <ctrl-pgdown>
    ]
    gt

tab-prev
    <ctrl-pgup>
    [
    gT

tab-clone
    tC
    gc

reload
    r
    <f5>
    or

reload -f
    R
    <ctrl-f5>
    oR

back
    oH
    <back>
    H

back -t
    th

back -w
    wh

forward -w
    wl
    oL

fullscreen
    <f11>

hint links tab
    tl

hint all window
    wf

hint all tab-bg
    ;b

hint all tab-fg
    ;f

hint images
    oi
    I

hint images tab
    ti

hint links fill :open {hint-url}
    oa

hint links fill :open -t -i {hint-url}
    ta

hint --rapid links tab-bg
    tL
    F

hint --rapid links window
    ;R

hint links download
    al

hint inputs
    oI
    B
    x

scroll left
    h

scroll down
    j
    alt+j
    alt+d
    M-d
    meta-d
    meta+d
    <alt>-d
    <alt>+d
    <ctrl-e>

scroll up
    k
    <ctrl-y>

scroll right
    l

undo
    u
    <ctrl-shift-t>

scroll-perc 0
    gg

scroll-perc
    G

search-next
    n

search-prev
    N

enter-mode insert
    i

enter-mode jump_mark
    '

yank domain
    yd

yank domain -s
    yD

yank pretty-url
    yp

yank pretty-url -s
    yP

open -- {clipboard}
    op

open -- {primary}
    p

open -w -- {clipboard}
    wp

open -w -- {primary}
    wP

set-cmd-text -s :bookmark-load
    ob

set-cmd-text -s :bookmark-load -t
    tb

set-cmd-text -s :bookmark-load -w
    wB

save
    sf

set-cmd-text -s :set
    ss

set-cmd-text -s :set -t
    sl

set-cmd-text -s :bind
    sk
    zb

zoom-out
    -

zoom-in
    =

zoom
    +
    0

navigate prev
    [[

navigate next
    ]]

navigate prev -t
    {{

navigate next -t
    }}

navigate up
    ou
    U

navigate up -t
    tU

navigate increment
    <ctrl-a>
    K

navigate decrement
    <ctrl-x>
    J

inspector
    wi

download
    aa
    <ctrl-s>
    A

download-cancel
    aA

download-clear
    aD
    C

download-open
    ao

download-retry
    ar

download-remove
    ad

view-source
    tf
    ts

tab-focus last
    <ctrl-tab>

enter-mode passthrough
    <ctrl-v>

quit
    <ctrl-q>
    ZQ

scroll-page 0 1
    <ctrl-f>

scroll-page 0 -1
    <ctrl-b>

scroll-page 0 0.5
    <ctrl-d>

scroll-page 0 -0.5
    <ctrl-u>

tab-focus 1
    <alt-1>
    g0

tab-focus 2
    <alt-2>

tab-focus 3
    <alt-3>

tab-focus 4
    <alt-4>

tab-focus 5
    <alt-5>

tab-focus 6
    <alt-6>

tab-focus 7
    <alt-7>

tab-focus 8
    <alt-8>

tab-focus 9
    <alt-9>

home
    <ctrl-h>
    oh

print
    <ctrl-alt-p>

follow-selected
    <return>
    <ctrl-m>
    <shift-return>
    <enter>
    <shift-enter>

follow-selected -t
    <ctrl-return>
    <ctrl-enter>

record-macro
    q
    help

run-macro
    @

session-save
    <f2>
    zs
    sW
    SW

set-cmd-text -s :buffer
    b
    <shift-tab>

bookmark-add
    mm
    M

quickmark-save
    mM
    Q

bookmark-del;; message-info "Bookmark deleted."
    md

quickmark-del;; message-info "Quickmark deleted."
    mD

restart
    <shift-f10>
    zR

tab-focus -1
    g$

session-load default
    <f3>
    zl
    sO

spawn --userscript wiki
    <f1>

spawn --userscript commons
    <shift-f1>

spawn --userscript uselang
    <ctrl-f1>

spawn --userscript wikt
    <shift-ctrl-f1>
    <f4>
    Wd

spawn --userscript translate
    <shift-f4>

set-cmd-text -s :session-save
    <shift-f2>
    zS
    Sw

set-cmd-text -s :session-load
    <shift-f3>
    zL
    So

spawn --userscript raw
    <alt-f1>

run-with-count 5 scroll down
    <ctrl-j>
    <alt-d>

run-with-count 5 scroll up
    <ctrl-k>
    <alt-u>

forward
    L
    <forward>

set-cmd-text -s :open -t !w
    WO

set-cmd-text -s :open -t !wikt
    $

<unbound>
    co
    wb
    Ss
    .
    gr

spawn mpv {url}
    VV
    v

open {url}?action=history&feed=rss
    Wf

yank -s
    yy

yank
    yY

hint links yank
    yL

hint links yank-primary
    yl
    Y

help
    zh

open -t -- {primary}
    tp
    P

open -t -- {clipboard}
    tP

wq
    ZZ

set-cmd-text -s :unbind
    zu

open -t !w {primary}
    WW

open !w {primary}
    Ww

set ui user-stylesheet night.css
    zn

set ui user-stylesheet ""
    zN

set-cmd-text -s :open !w
    Wo

open {url}?action=purge
    Wp

open {url}?action=info
    Wi

open {url}?action=history
    Wh

enter-mode set_mark
    `

yank title -s
    yt

yank title
    yT

tab-only
    gO
    tO

history-clear
    zH

open qute:settings
    oS

session-delete default
    SD

set-cmd-text -s session-delete
    Sd

set-cmd-text -s :session-delete
    sd

session-load
    SO

search;;stop
    <escape>

set-cmd-text :open {primary}
    oP

set-cmd-text -s :open !etymology
    WD
    Wx
    &

set-cmd-text :open !w template:
    Wt
    #

set-cmd-text -s :zoom
    zZ

clear-keychain ;; search ;; fullscreen --leave
    <ctrl-[>

tab-detach
    tw

spawn --userscript url.fish
    WX

set-cmd-text -s :bind -f
    zB

set-cmd-text :open -t {url:pretty}
    tT

open view-source:{url}
    os

open https://github.com/{primary}
    Wg

open -t https://github.com/{primary}
    wG

spawn --userscript commonsTitle
    WT

spawn --userscript gitTitle.fish
    WG

set-cmd-text :open !
    !

save;;message-info "Settings saved!"
    zz

set tabs show always
    zt

set tabs show never
    zT

buffer 1
    `1

buffer 2
    `2

buffer 3
    `3

buffer 4
    `4

buffer 5
    `5

set-cmd-text :open {clipboard}
    zp

hint
    f

enter-mode caret
    ^

hint all spawn mpv {hint-url}
    V

spawn --userscript buku.fish
    mb

set ui hide-statusbar!
    za

set-cmd-text -s :bind debug-pyeval --quiet 0
    zd

buffer 6
    `6

buffer 7
    `7

buffer 8
    `8

buffer 9
    `9

[insert]
# Keybindings for insert mode.
# Since normal keypresses are passed through, only special keys are
# supported in this mode.
# Useful hidden commands to map in this section:
#  * `open-editor`: Open a texteditor with the focused field.
#  * `paste-primary`: Paste primary selection at cursor position.

open-editor
    <ctrl-e>

insert-text {primary}
    <shift-ins>

message-info "Use Ctrl-H!"
    <backspace>

fake-key <Ctrl-Shift-left>
    <ctrl-w>

fake-key <Backspace>
    <ctrl-h>

[hint]
# Keybindings for hint mode.
# Since normal keypresses are passed through, only special keys are
# supported in this mode.
# Useful hidden commands to map in this section:
#  * `follow-hint`: Follow the currently selected hint.

follow-hint
    <return>
    <ctrl-m>
    <ctrl-j>
    <shift-return>
    <enter>
    <shift-enter>

hint --rapid links tab-bg
    <ctrl-r>

hint links
    <ctrl-f>

hint all tab-bg
    <ctrl-b>

[command]
# Keybindings for command mode.
# Since normal keypresses are passed through, only special keys are
# supported in this mode.
# Useful hidden commands to map in this section:
#  * `command-history-prev`: Switch to previous command in history.
#  * `command-history-next`: Switch to next command in history.
#  * `completion-item-focus`: Select another item in completion.
#  * `command-accept`: Execute the command currently in the commandline.

command-history-prev
    <ctrl-p>
    <up>
    <down>

command-history-next
    <ctrl-n>

completion-item-focus prev
    <shift-tab>

completion-item-focus next
    <tab>

completion-item-focus next-category
    <ctrl-tab>

completion-item-focus prev-category
    <ctrl-shift-tab>

completion-item-del
    <ctrl-d>

command-accept
    <return>
    <ctrl-m>
    <ctrl-j>
    <shift-return>
    <enter>
    <shift-enter>

debug-pyeval --quiet 0
    <backspace>

rl-forward-word
    <alt-w>

[prompt]
# Keybindings for prompts in the status line.
# You can bind normal keys in this mode, but they will be only active
# when a yes/no-prompt is asked. For other prompt modes, you can only
# bind special keys.
# Useful hidden commands to map in this section:
#  * `prompt-accept`: Confirm the entered value.
#  * `prompt-accept yes`: Answer yes to a yes/no question.
#  * `prompt-accept no`: Answer no to a yes/no question.

prompt-accept
    <return>
    <ctrl-m>
    <ctrl-j>
    <shift-return>
    <enter>
    <shift-enter>

prompt-accept yes
    y

prompt-accept no
    n

prompt-open-download
    <ctrl-x>

prompt-item-focus prev
    <shift-tab>
    <up>

prompt-item-focus next
    <tab>
    <down>

[command,prompt]

rl-backward-word
    <ctrl-b>
    <alt-b>

rl-forward-char
    <ctrl-f>

rl-forward-word
    <alt-f>

rl-beginning-of-line
    <ctrl-a>

rl-end-of-line
    <ctrl-e>

rl-unix-line-discard
    <ctrl-u>

rl-kill-line
    <ctrl-k>

rl-kill-word
    <alt-d>

rl-unix-word-rubout
    <ctrl-w>

rl-backward-kill-word
    <alt-backspace>

rl-yank
    <ctrl-y>

rl-delete-char
    <ctrl-?>

rl-backward-delete-char
    <ctrl-h>

[caret]

toggle-selection
    v
    <space>

drop-selection
    <ctrl-space>

enter-mode normal
    c

move-to-next-line
    j

move-to-prev-line
    k

move-to-next-char
    l

move-to-prev-char
    h

move-to-end-of-word
    e

move-to-next-word
    w

move-to-prev-word
    b

move-to-start-of-next-block
    ]

move-to-start-of-prev-block
    [

move-to-end-of-next-block
    }

move-to-end-of-prev-block
    {

move-to-start-of-line
    0

move-to-end-of-line
    $

move-to-start-of-document
    gg

move-to-end-of-document
    G

yank selection -s
    Y

yank selection
    y
    <return>
    <ctrl-m>
    <ctrl-j>
    <shift-return>
    <enter>
    <shift-enter>

scroll left
    H

scroll down
    J

scroll up
    K

scroll right
    L

